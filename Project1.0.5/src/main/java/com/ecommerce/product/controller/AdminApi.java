/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.ecommerce.product.controller;

import com.ecommerce.product.model.InlineResponse200;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-06-14T19:35:05.706628+05:30[Asia/Calcutta]")

@Validated
@Api(value = "admin", description = "the admin API")
public interface AdminApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /admin : Get product data for audit
     * get product entries for audit
     *
     * @return Successfully fetched data (status code 200)
     *         or Not found (status code 404)
     */
    @ApiOperation(value = "Get product data for audit", nickname = "getAuditData", notes = "get product entries for audit", response = InlineResponse200.class, responseContainer = "List", tags={ "Admin", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully fetched data", response = InlineResponse200.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "Not found") })
    @RequestMapping(value = "/admin",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<InlineResponse200>> getAuditData() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"quantity\" : 10, \"createdDate\" : \"2000-01-23T04:56:07.000+00:00\", \"sellerNumber\" : \"sellerNumber\", \"createdBy\" : \"UUID of the seller\", \"price\" : 12.25, \"name\" : \"shoes\", \"discount\" : 20, \"details\" : \"description of the image that we want to show\", \"id\" : \"id\", \"updatedDate\" : \"2000-01-23T04:56:07.000+00:00\", \"category\" : \"hardware\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
