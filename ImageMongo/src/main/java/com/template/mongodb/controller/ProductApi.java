/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.template.mongodb.controller;

import com.template.mongodb.model.Product;
import com.template.mongodb.model.ProductByte;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-06-04T17:02:42.150979100+05:30[Asia/Calcutta]")

@Validated
@Api(value = "product", description = "the product API")
public interface ProductApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /product/byte : post a product to database
     * it is used to save the data
     *
     * @param productByte  (required)
     * @return okay accepted (status code 201)
     */
    @ApiOperation(value = "post a product to database", nickname = "saveProductByte", notes = "it is used to save the data", response = ProductByte.class, tags={ "UserProduct", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "okay accepted", response = ProductByte.class) })
    @RequestMapping(value = "/product/byte",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<ProductByte> saveProductByte(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ProductByte productByte) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"image\" : [ { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" }, { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" } ], \"name\" : \"shoes\", \"category\" : \"hardware\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /product/micro : post a product to database
     * it is used to save the data
     *
     * @param product  (required)
     * @return okay accepted (status code 201)
     */
    @ApiOperation(value = "post a product to database", nickname = "saveProductMicro", notes = "it is used to save the data", response = Product.class, tags={ "UserProduct", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "okay accepted", response = Product.class) })
    @RequestMapping(value = "/product/micro",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Product> saveProductMicro(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Product product) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"image\" : [ { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" }, { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" } ], \"name\" : \"shoes\", \"category\" : \"hardware\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
