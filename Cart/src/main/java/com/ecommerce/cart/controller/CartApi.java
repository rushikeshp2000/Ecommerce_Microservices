/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.ecommerce.cart.controller;

import com.ecommerce.cart.model.CartResponse;
import com.ecommerce.cart.model.ErrorApiResponse;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-06-15T01:03:00.414249800+05:30[Asia/Calcutta]")

@Validated
@Api(value = "cart", description = "the cart API")
@CrossOrigin(origins = "http://127.0.0.1:5500")
public interface CartApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * DELETE /cart/{UserId} : Delete all product
     * This is a delete all product.
     *
     * @param userId  (required)
     * @return Succesfull operation. (status code 200)
     */
    @ApiOperation(value = "Delete all product", nickname = "deleteAllProduct", notes = "This is a delete all product.", response = CartResponse.class, tags={ "Cart", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Succesfull operation.", response = CartResponse.class) })
    @RequestMapping(value = "/cart/{UserId}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    default ResponseEntity<CartResponse> deleteAllProduct(@ApiParam(value = "",required=true) @PathVariable("UserId") String userId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"result\" : [ { \"images\" : [ { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" }, { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" } ], \"quantity\" : 10, \"sellerNumber\" : \"sellerNumber\", \"price\" : 12.25, \"TotalPrice\" : 0.8008281904610115, \"name\" : \"shoes\", \"category\" : \"category\" }, { \"images\" : [ { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" }, { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" } ], \"quantity\" : 10, \"sellerNumber\" : \"sellerNumber\", \"price\" : 12.25, \"TotalPrice\" : 0.8008281904610115, \"name\" : \"shoes\", \"category\" : \"category\" } ], \"statusMessage\" : \"Operation completed successful\", \"statusCode\" : 200 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /cart/{UserId}/{ProductName} : Delete product
     * This is a delete product.
     *
     * @param productName  (required)
     * @param userId  (required)
     * @return Succesfull operation. (status code 200)
     */
    @ApiOperation(value = "Delete product", nickname = "deleteProduct", notes = "This is a delete product.", response = CartResponse.class, tags={ "Cart", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Succesfull operation.", response = CartResponse.class) })
    @RequestMapping(value = "/cart/{UserId}/{ProductName}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    default ResponseEntity<CartResponse> deleteProduct(@ApiParam(value = "",required=true) @PathVariable("ProductName") String productName,@ApiParam(value = "",required=true) @PathVariable("UserId") String userId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"result\" : [ { \"images\" : [ { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" }, { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" } ], \"quantity\" : 10, \"sellerNumber\" : \"sellerNumber\", \"price\" : 12.25, \"TotalPrice\" : 0.8008281904610115, \"name\" : \"shoes\", \"category\" : \"category\" }, { \"images\" : [ { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" }, { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" } ], \"quantity\" : 10, \"sellerNumber\" : \"sellerNumber\", \"price\" : 12.25, \"TotalPrice\" : 0.8008281904610115, \"name\" : \"shoes\", \"category\" : \"category\" } ], \"statusMessage\" : \"Operation completed successful\", \"statusCode\" : 200 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /cart/{UserId} : get all products of cart
     * This is used to get the cart.
     *
     * @param userId  (required)
     * @return Succesfull operation. (status code 200)
     */
    @ApiOperation(value = "get all products of cart", nickname = "getAllUser", notes = "This is used to get the cart.", response = CartResponse.class, tags={ "Cart", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Succesfull operation.", response = CartResponse.class) })
    @RequestMapping(value = "/cart/{UserId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<CartResponse> getAllUser(@ApiParam(value = "",required=true) @PathVariable("UserId") String userId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"result\" : [ { \"images\" : [ { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" }, { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" } ], \"quantity\" : 10, \"sellerNumber\" : \"sellerNumber\", \"price\" : 12.25, \"TotalPrice\" : 0.8008281904610115, \"name\" : \"shoes\", \"category\" : \"category\" }, { \"images\" : [ { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" }, { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" } ], \"quantity\" : 10, \"sellerNumber\" : \"sellerNumber\", \"price\" : 12.25, \"TotalPrice\" : 0.8008281904610115, \"name\" : \"shoes\", \"category\" : \"category\" } ], \"statusMessage\" : \"Operation completed successful\", \"statusCode\" : 200 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /cart/{UserId}/{ProductName} : get all products of cart
     * This is used to get the cart.
     *
     * @param userId  (required)
     * @param productName  (required)
     * @return Succesfull operation. (status code 200)
     */
    @ApiOperation(value = "get all products of cart", nickname = "getSingleCart", notes = "This is used to get the cart.", response = CartResponse.class, tags={ "Cart", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Succesfull operation.", response = CartResponse.class) })
    @RequestMapping(value = "/cart/{UserId}/{ProductName}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<CartResponse> getSingleCart(@ApiParam(value = "",required=true) @PathVariable("UserId") String userId,@ApiParam(value = "",required=true) @PathVariable("ProductName") String productName) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"result\" : [ { \"images\" : [ { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" }, { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" } ], \"quantity\" : 10, \"sellerNumber\" : \"sellerNumber\", \"price\" : 12.25, \"TotalPrice\" : 0.8008281904610115, \"name\" : \"shoes\", \"category\" : \"category\" }, { \"images\" : [ { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" }, { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" } ], \"quantity\" : 10, \"sellerNumber\" : \"sellerNumber\", \"price\" : 12.25, \"TotalPrice\" : 0.8008281904610115, \"name\" : \"shoes\", \"category\" : \"category\" } ], \"statusMessage\" : \"Operation completed successful\", \"statusCode\" : 200 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /cart/{UserId}/{ProductName}/{quantity} : change the details of single product from cart
     * change  a single product by matching name
     *
     * @param productName  (required)
     * @param userId  (required)
     * @param quantity  (required)
     * @return okay accepted (status code 200)
     *         or Bad Request (status code 400)
     */
    @ApiOperation(value = "change the details of single product from cart", nickname = "updateSingleProducts", notes = "change  a single product by matching name", response = CartResponse.class, tags={ "Cart", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "okay accepted", response = CartResponse.class),
        @ApiResponse(code = 400, message = "Bad Request", response = ErrorApiResponse.class) })
    @RequestMapping(value = "/cart/{UserId}/{ProductName}/{quantity}",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<CartResponse> updateSingleProducts(@ApiParam(value = "",required=true) @PathVariable("ProductName") String productName,@ApiParam(value = "",required=true) @PathVariable("UserId") String userId,@ApiParam(value = "",required=true) @PathVariable("quantity") String quantity) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"result\" : [ { \"images\" : [ { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" }, { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" } ], \"quantity\" : 10, \"sellerNumber\" : \"sellerNumber\", \"price\" : 12.25, \"TotalPrice\" : 0.8008281904610115, \"name\" : \"shoes\", \"category\" : \"category\" }, { \"images\" : [ { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" }, { \"imageName\" : \"image\", \"imagedata\" : \"imagedata\", \"imageType\" : \"jpeg\" } ], \"quantity\" : 10, \"sellerNumber\" : \"sellerNumber\", \"price\" : 12.25, \"TotalPrice\" : 0.8008281904610115, \"name\" : \"shoes\", \"category\" : \"category\" } ], \"statusMessage\" : \"Operation completed successful\", \"statusCode\" : 200 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
